version: 0.2

#env:
#  shell: bash
#  variables:
#    SAM_CLI_LINK: 'https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip'
#    SAM_CLI_PACKAGE_NAME: 'aws-sam-cli.zip'

phases:
  install:
    run-as: root
    on-failure: ABORT
    runtime-versions:
      python: 3.12
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    on-failure: ABORT
    commands:
      - |
        aws ecr get-login-password --region $AWS_DEFAULT_REGION \
        | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    on-failure: CONTINUE
    commands:
      - EPOCH_TAG=$(date +%s)
      - REGISTRY_URL="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      - IMAGE_URI="${REGISTRY_URL}/${SERVICE_NAME}-${ENVIRONMENT}"
      - |
        if [ ! "${ENVIRONMENT}" = "prod" ]; then
          docker build . -t "${SERVICE_NAME}-${ENVIRONMENT}"
          docker tag "${SERVICE_NAME}-${ENVIRONMENT}:latest" \
          "${IMAGE_URI}:latest"
          docker tag "${SERVICE_NAME}-${ENVIRONMENT}:latest" \
          "${IMAGE_URI}:${EPOCH_TAG}"
        fi
      - |
        if [ "${ENVIRONMENT}" = "prod" ]; then
          if [ -z "${TAG_TO_PROMOTE}" ]; then echo "An error occurred, variable \$TAG_TO_PROMOTE must be set when deploying in prod!" && exit 1; fi
          docker pull "${REGISTRY_URL}/${SERVICE_NAME}-stage:${TAG_TO_PROMOTE}"
          EPOCH_TAG=${TAG_TO_PROMOTE}
        fi
      - docker push "${IMAGE_URI}" --all-tags
      - OLD_TASK_DEFINITION_ARN=$(aws ssm get-parameter --name "/ecs/task-definitions/${SERVICE_NAME}/${ENVIRONMENT}/arn" --query "Parameter.Value" --output text)
      - echo "Actual task definition is ${OLD_TASK_DEFINITION_ARN}"
      - |
        aws cloudformation update-stack --stack-name ${ENVIRONMENT}-${SERVICE_NAME}-task-definition \
        --parameters ParameterKey=ImageTag,ParameterValue=${EPOCH_TAG} \
        ParameterKey=Cpu,UsePreviousValue=true \
        ParameterKey=Memory,UsePreviousValue=true \
        ParameterKey=ContainerName,UsePreviousValue=true \
        ParameterKey=ContainerPort,UsePreviousValue=true \
        ParameterKey=Environment,UsePreviousValue=true \
        ParameterKey=EFSMountPath,UsePreviousValue=true \
        ParameterKey=Registry,UsePreviousValue=true \
        ParameterKey=ServiceName,UsePreviousValue=true \
        ParameterKey=ImageName,UsePreviousValue=true \
        ParameterKey=EFSFileSystemId,UsePreviousValue=true \
        --capabilities CAPABILITY_IAM \
        --use-previous-template
      - aws cloudformation wait stack-update-complete --stack-name ${ENVIRONMENT}-${SERVICE_NAME}-task-definition
      - |
        NEW_TASK_DEFINITION_ARN=$(aws cloudformation describe-stack-resources \
        --stack-name ${ENVIRONMENT}-${SERVICE_NAME}-task-definition \
        --logical-resource-id TaskDefinition \
        --query StackResources[].PhysicalResourceId --output text)
      - aws ssm put-parameter --name "/ecs/task-definitions/${SERVICE_NAME}/${ENVIRONMENT}/arn" --value "${NEW_TASK_DEFINITION_ARN}" --overwrite
      - aws ecs update-service --cluster "${ENVIRONMENT}" --service "${SERVICE_NAME}" --task-definition "${NEW_TASK_DEFINITION_ARN}"
      - aws ecs wait services-stable --cluster "${ENVIRONMENT}" --services "${SERVICE_NAME}"
  post_build:
    on-failure: ABORT
    commands:
      - |
        if [ "${CODEBUILD_BUILD_SUCCEEDING}" -eq 0 ]; then
          echo "Build not succeeded, restoring old task definition in ssm."
          TASK_DEFINITION_ARN="${OLD_TASK_DEFINITION_ARN}"
        fi
      - |
        if [ "${CODEBUILD_BUILD_SUCCEEDING}" -eq 1 ]; then
          echo "Build succeeded, updating task definition in ssm."
          TASK_DEFINITION_ARN="${NEW_TASK_DEFINITION_ARN}"
        fi
      - aws ssm put-parameter --name "/ecs/task-definitions/${SERVICE_NAME}/${ENVIRONMENT}/arn" --value "${TASK_DEFINITION_ARN}" --overwrite
