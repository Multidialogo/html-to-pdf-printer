version: 0.2

phases:
  install:
    run-as: root
    on-failure: ABORT
    runtime-versions:
      python: 3.12
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    on-failure: ABORT
    commands:
      - |
        aws ecr get-login-password --region $AWS_DEFAULT_REGION \
        | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    on-failure: ABORT
    commands:
      - EPOCH_TAG=$(date +%s)
      - REGISTRY_URL="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      - IMAGE_URI="${REGISTRY_URL}/${SERVICE_NAME}-${ENVIRONMENT}"
      - docker build . -t "${SERVICE_NAME}-${ENVIRONMENT}"
      - docker tag "${SERVICE_NAME}-${ENVIRONMENT}:latest" "${IMAGE_URI}:latest"
      - docker tag "${SERVICE_NAME}-${ENVIRONMENT}:latest" "${IMAGE_URI}:${EPOCH_TAG}"
      - docker push "${IMAGE_URI}" --all-tags
      - OLD_TASK_DEFINITION_ARN=$(aws ssm get-parameter --name "/ecs/task-definitions/${SERVICE_NAME}/${ENVIRONMENT}/arn" --query "Parameter.Value" --output text)
      - echo "Actual task definition is ${OLD_TASK_DEFINITION_ARN}"
      - |
        aws cloudformation deploy --stack-name ${ENVIRONMENT}-${SERVICE_NAME}-task-definition \
        --template task-definition.yml \
        --parameter-overrides ImageTag=${EPOCH_TAG} \
        Cpu=${TASK_CPU} \
        Memory=${TASK_MEMORY} \
        ContainerName=${CONTAINER_NAME} \
        ContainerPort=${CONTAINER_PORT} \
        Environment=${ENVIRONMENT} \
        EFSMountPath=${EFS_MOUNT_PATH} \
        ServiceName=${SERVICE_NAME} \
        ImageName=${IMAGE_NAME} \
        EFSFileSystemId=${EFS_FILE_SYSTEM_ID} \
        --capabilities CAPABILITY_IAM
      - |
        NEW_TASK_DEFINITION_ARN=$(aws cloudformation describe-stack-resources \
        --stack-name ${ENVIRONMENT}-${SERVICE_NAME}-task-definition \
        --logical-resource-id TaskDefinition \
        --query StackResources[].PhysicalResourceId --output text)
      - aws ecs update-service --cluster "${ENVIRONMENT}" --service "${SERVICE_NAME}" --task-definition "${NEW_TASK_DEFINITION_ARN}"
      - aws ecs wait services-stable --cluster "${ENVIRONMENT}" --services "${SERVICE_NAME}"
  post_build:
    on-failure: ABORT
    commands:
      - |
        if [ ${CODEBUILD_BUILD_SUCCEEDING} -eq 0 ]; then
          echo "Build not succeeded, maintaining old task definition in ssm."
          exit 1
        fi
      - |
        if [ ${CODEBUILD_BUILD_SUCCEEDING} -eq 1 ]; then
          echo "Build succeeded, updating task definition in ssm."
          aws ssm put-parameter --name "/ecs/task-definitions/${SERVICE_NAME}/${ENVIRONMENT}/arn" --value "${NEW_TASK_DEFINITION_ARN}" --overwrite
        fi
