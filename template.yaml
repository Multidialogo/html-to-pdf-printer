AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:

  FunctionName:
    Type: String

  Environment:
    Type: String

  Memory:
    Type: String

  Subnets:
    Type: CommaDelimitedList

  Timeout:
    Type: String

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: vpc-51f0be36
      GroupDescription: Enable VPC access to the lambda function.
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.11.0.0/20
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupClass: STANDARD
      RetentionInDays: 30

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: NetworkInterfacePermission
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:Describe*
                  - ec2:CreateNetworkInterface*
                  - ec2:DeleteNetworkInterface*
                  - ec2:DetachNetworkInterface
                  - ec2:ModifyNetworkInterface*
                Resource: '*'

  Function:
    DependsOn:
      - SecurityGroup
      - FunctionRole
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${FunctionName}-${Environment}'
      LoggingConfig:
        LogGroup: !Ref LogGroup
      MemorySize: !Ref Memory
      PackageType: Image
      Role: !GetAtt FunctionRole.Arn
      Timeout: !Ref Timeout
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt SecurityGroup.GroupId
        SubnetIds: !Ref Subnets
    Metadata:
      DockerTag: v1
      DockerContext: ./
      Dockerfile: Dockerfile